import Head from 'next/head';
import { Inter } from '@next/font/google';
import {
	Box,
	Button,
	Center,
	Flex,
	FormControl,
	FormLabel,
	Grid,
	Heading,
	Input,
	Text,
	Stack,
	useColorModeValue,
	useToast,
	VStack,
	Container,
	Image,
	FormHelperText,
} from '@chakra-ui/react';
import React, { useEffect, useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import client from '../client';
import { useRouter } from 'next/router';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
	const [user_id, setUser_Id] = useState<string>('');
	const [password, setPassword] = useState<string>('');
	const router = useRouter();
	const toast = useToast({
		position: 'bottom-right',
		isClosable: true,
		variant: 'top-accent',
	});
	const { isError, isLoading, isSuccess, mutate, data } = useMutation(
		async () => {
			if (!password || !user_id)
				throw new Error('Please fill all fields');
			const { data } = await client.post('/auth/login', {
				user_id: user_id,
				password: password,
			});
			return data;
		},
		{
			onSuccess(data) {
				toast({
					title: 'Login successful',
					status: 'success',
					description: 'redirecting to login page'
				});
				localStorage.setItem('token', data['access_token']);
				localStorage.setItem('user', JSON.stringify(data['user']))
				client.defaults.headers.common[
					'Authorization'
				] = `Bearer ${data['access_token']}}`;
				setTimeout(() => {
					router.push('/dashboard');
				}, 3e3);
			},
			onError() {
				toast({
					title: 'Login failed',
					status: 'error',
				});
			},
		}
	);
	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta
					name='description'
					content='Generated by create next app'
				/>
				<meta
					name='viewport'
					content='width=device-width, initial-scale=1'
				/>
				<link
					rel='icon'
					href='/favicon.ico'
				/>
			</Head>
			<Grid
				h={'100vh'}
				gridTemplateColumns={{
					base: 'repeat(1, 1fr)',
					lg: 'repeat(2, 1fr)',
				}}
			>
				<Box
					h={'100vh'}
					bgImage={'url(/kahe-gigapixel.png)'}
					bgPos={'center'}
					bgSize={'cover'}
				></Box>
				<Box h={'100vh'}>
					<Container
						display={'flex'}
						h={'full'}
						flexDir={'column'}
						justifyContent={'space-evenly'}
						maxW={'lg'}
					>
						<Center>
							<Image
								src={'/kahe.avif'}
								h={'36'}
								w={'36'}
								alt={'kahe'}
							></Image>
						</Center>
						<Box>
							<VStack alignItems={'left'}>
								<Heading>Welcome Back!</Heading>
								<Text
									fontSize={'sm'}
									color={'gray.600'}
								>
									Sign in to continue
								</Text>
							</VStack>
							<Center
								pt={'10'}
								flexDir={'column'}
							>
								<FormControl>
									<FormLabel>User id</FormLabel>
									<Input
										onChange={(e) =>
											setUser_Id(e.target.value)
										}
										outline={'1px #00000080 solid'}
									></Input>
								</FormControl>
								<FormControl pt={5}>
									<FormLabel>Password</FormLabel>
									<Input
										onChange={(e) =>
											setPassword(e.target.value)
										}
										type={'password'}
										outline={'1px #00000080 solid'}
									></Input>
									{/*<FormHelperText>dob</FormHelperText>*/}
								</FormControl>
							</Center>
						</Box>
						<Button
							onClick={() => {
								mutate();
							}}
							colorScheme={'green'}
						>
							Login
						</Button>
					</Container>
				</Box>
			</Grid>
		</>
	);
}
